############################################################
# 📦 How to Bundle & Package Your VS Code Extension
############################################################

Follow these steps to bundle your extension using esbuild and package it for publishing. Each step is clear and easy to follow!

---

## 🛠️ Step 1: Install esbuild (Dev Only)
```bash
npm i -D esbuild
```

---

## 📁 Step 2: Add Build Script
1. Create a new folder named `scripts` in your project root.
2. Inside `scripts`, add a new file called `build.mjs`.

---

## 📝 Step 3: Update `package.json`
Add or update these scripts:
```json
"scripts": {
  "build": "node scripts/build.mjs",
  "package": "npm run build && vsce package"
}
```

Change the value for `vscode:prepublish`:
```json
"vscode:prepublish": "npm run build"
```
(Was previously `npm run compile`)

---

## 🔄 Step 4: Rebuild After Bundling
To recompile TypeScript after bundling (for development/fixes):
```bash
npm run compile
```

---

## ⚙️ Step 5: Bundle, Check, and Package
- To bundle your extension and output to `out/extension.js`:
  ```bash
  npm run build
  ```
- To check which files will be included in the VSIX package:
  ```bash
  npx vsce ls
  ```
  - Use `.vscodeignore` to ignore or accept files as needed.
- To build the VSIX package for publishing:
  ```bash
  npm run package
  ```

---

## ✅ Summary
- `npm run build` → Bundles your extension
- `npx vsce ls` → Lists files in VSIX
- `.vscodeignore` → Controls included files
- `npm run package` → Creates VSIX file

---

> 🖼️ Icons and formatting make each step easy to follow. Happy coding!
